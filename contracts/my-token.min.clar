(impl-trait 'SP2TPZ623K5N2WYF1BWRMP5A93PSBWWADQGKJRJCS.token-transfer-trait.can-transfer-tokens)
(define-fungible-token fungible-token)
(define-map allowances ((spender principal) (owner principal)) ((allowance uint)))
(define-data-var total-supply uint u0)
(define-private (get-total-supply) (var-get total-supply))
(define-private (allowance-of (spender principal) (owner principal)) (begin (print (map-get? allowances ((spender spender) (owner owner)))) (print (get allowance (map-get? allowances ((spender spender) (owner owner))))) (default-to u0 (get allowance (map-get? allowances ((spender spender) (owner owner)))))))
(define-public (get-allowance-of (spender principal) (owner principal)) (ok (allowance-of spender owner)))
(define-public (transfer (recipient principal) (amount uint)) (ft-transfer? fungible-token amount tx-sender recipient))
(define-read-only (name) (ok "{{token-name}}"))
(define-private (decrease-allowance (spender principal) (owner principal) (amount uint)) (let ((allowance (allowance-of spender owner))) (if (or (> amount allowance) (<= amount u0)) true (begin (map-set allowances ((spender spender) (owner owner)) ((allowance (- allowance amount)))) true))))
(define-private (increase-allowance (spender principal) (owner principal) (amount uint)) (let ((allowance (allowance-of spender owner))) (if (<= amount u0) false (begin (print (tuple (spender spender) (owner owner))) (print (map-set allowances ((spender spender) (owner owner)) ((allowance (+ allowance amount))))) true))))
(define-public (transfer-token (recipient principal) (amount uint)) (transfer recipient amount))
(define-public (transfer-from (owner principal) (recipient principal) (amount uint)) (let ((allowance (allowance-of tx-sender owner))) (print amount) (print allowance) (print (or (> amount allowance) (<= amount u0))) (if (or (> amount allowance) (<= amount u0)) (err false) (if (and (is-ok (ft-transfer? fungible-token amount owner recipient)) (decrease-allowance tx-sender owner amount)) (ok true) (err false)))))
(define-public (approve (spender principal) (amount uint)) (if (and (> amount u0) (increase-allowance spender tx-sender amount)) (ok amount) (err false)))
(define-public (revoke (spender principal)) (let ((allowance (allowance-of spender tx-sender))) (if (and (> allowance u0) (decrease-allowance spender tx-sender allowance)) (ok 0) (err false))))
(define-read-only (balance-of (owner principal)) (begin (ok (ft-get-balance fungible-token owner))))
(define-private (mint! (account principal) (amount uint)) (if (<= amount u0) (err false) (begin (var-set total-supply (+ (var-get total-supply) amount)) (ft-mint? fungible-token amount account) (ok amount))))
(begin (mint! 'SP2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKNRV9EJ7 u2000000) (mint! 'S02J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKPVKG2CE u1000000) (mint! 'ST3J2GVMMM2R07ZFBJDWTYEYAR8FZH5WKDTFJ9AHA u2000000) (mint! 'STF4HK0PN8S7B8CBN564KY6VAH5D0P2J8WDGEZAH u1000000) )